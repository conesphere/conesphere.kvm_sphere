---
# defaults file for conesphere.kvm.manager
# the zpool or filesystem that holds base images to clone from 
kvm_image_zpool: "data/image"
# the zfs filesystem or pool that will hold the running images 
# and userdata
kvm_zfs_filesystem: "data/kvm"
# the directory in which userhomes and vm data will be stored
kvm_image_root: "/kvm"
kvm_image_downloads: "/root/downloads"

# use list of all bridge interfaces from network 
# config by default
kvm_allowed_bridge_if: "{{ network_interfaces.bridge|default([]) }}"

# usage: 
# kvm_spice_passwords: 
#    somemachinename: somesecretpassword   
#    someothermachinename: someothersecretpassword   
#
kvm_spice_passwords: {}
kvm_default_spice_password: "ToLazyToConfigureASpicePassword"
kvm_default_spice_addr: "::1"

# BIOS NAME --> Firmware File
kvm_firmware:
  'uefi': "/usr/share/ovmf/OVMF.fd"
  'ovmf': "/usr/share/ovmf/OVMF.fd"
  'bios': "/usr/share/seabios/bios.bin"
  'seabios': "/usr/share/seabios/bios.bin"

kvm_default_firmware_type: "ovmf"

kvm_monitor: "spice"
kvm_spice_addr: "192.168.1.10"

# empty default for kvm machines 
kvm_machines: []

# initial value is the root user
# the unique name variables are used tio detect if either the user 
# has set a machine name twice or if two machine name are leading to 
# the same uid (which is generated via a checksum) in that case rollout 
# is cancelled so user can fix the problem, for example by defining a uid in 
# the kvm_machine structure. 
kvm_unique_name: 'root=0'
kvm_unique_uid: '0=root'

#
# This is a default set of VM images 
# you may create your own images, too
# images are basicly zfs snapshots of an operating system delivered with a 
# kickoff script. The image receives its setting via a floppy disk image containing a 
# kickstart.yml file which contains the values from its kvm_machine section in ansible 
# a kickstart script then adds remote access and networking and cycles hostname and 
# ssh keys 
#
kvm_images:
  'CS_Debian_Stretch_9.3.nesting_amd64':
    'v0001':
      url: 'https://www.conesphere.com/kvmsphere/CS_Debian_Stretch_9.3.nesting_amd64.v0001.gz'
      chksum: 'sha256:b50f9882ad82b1f135e5d62daff5990d5874cf731cf5b8c4a0548f88bf42cd93'
      resize_type: debian_gpt
      firmware_type: bios
  'CS_Debian_Stretch_9.3_amd64':
    'v0002':
      url: 'https://www.conesphere.com/kvmsphere/CS_Debian_Stretch_9.3_amd64.v0002.gz'
      chksum: 'sha256:55fb3845472fc226952dfb80a7c22bd830ce6b97c63b4770e8fa650db26aad1a'
      resize_type: debian_gpt
      firmware_type: bios
  'CS_Debian_Stretch_9.3.nesting_uefi_amd64':
    'v0001':
      url: 'https://www.conesphere.com/kvmsphere/CS_Debian_Stretch_9.3.nesting_uefi_amd64.v0001.gz'
      chksum: 'sha256:b1f1b96be2b8c64a421c725145ad68e65d26d38bc36426206eb37a324b4d0688'
      resize_type: debian_gpt_uefi
      firmware_type: uefi
  'CS_Debian_Stretch_9.3_uefi_amd64':
    'v0001':
      url: 'https://www.conesphere.com/kvmsphere/CS_Debian_Stretch_9.3_uefi_amd64.v0001.gz'
      chksum: 'sha256:375ccba903d99d87308fa0d5b66c69b290e1a98aa690559a629c7aacf81df40d'
      resize_type: debian_gpt_uefi
      firmware_type: uefi

