---
# tasks file for conesphere.kvm.manager
- apt: 
    name: "{{ item }}"
    state: latest
  with_items:
    - qemu-kvm
    - pigz
    - parted
    - fdisk
    - socat
    - ovmf
    - dosfstools
- file:
   dest: /usr/local/bin
   state: directory
   owner: root
   group: root
   mode: "0755"
- template:
   dest: /usr/local/bin/fdisk_max_partition.sh
   src: templates/fdisk_max_partition.sh.j2
   owner: root
   group: root
   mode: "0755"
- template:
   dest: /usr/local/bin/fdisk_max_partition_gpt.sh
   src: templates/fdisk_max_partition_gpt.sh.j2
   owner: root
   group: root
   mode: "0755"
- file:
   dest: "/etc/qemu"
   state: directory
   owner: root
   group: root
   mode: "0755"
- template:
   dest: /etc/qemu/bridge.conf
   src: templates/etc-qemu-bridge.conf.j2
   owner: root
   group: root
   mode: "0444"
- file:
   dest: "/usr/lib/qemu"
   state: directory
   owner: root
   group: kvm
   mode: "0750"
- file:
   dest: "/usr/lib/qemu/qemu-bridge-helper"
   state: file
   owner: root
   group: root
   mode: "4755"
- template:
   dest: /etc/udev/rules.d/kvm_sphere_zvol_permissions.rules
   src: templates/etc-udev-rules.d-kvm_sphere_zvol_permissions.rules.j2
   owner: root
   group: root
   mode: "0644"
  register: udev_zvol_permissions
- service:
    name: udev
    state: restarted
  when: udev_zvol_permissions.changed
- file:
   dest: "{{ kvm_firmware_root }}"
   state: directory
   owner: "root"
   group: "root"
   mode: "0750"
- name: "Download {{ kvm_firmware_cur.key }}"
  get_url:
    url: "{{ kvm_firmware_cur.value.url }}"
    checksum: "{{ kvm_firmware_cur.value.chksum }}"
    dest: "{{ kvm_firmware_root }}/{{ kvm_firmware_cur.key }}.firmware"
    mode: 0444
  with_dict: "{{ kvm_firmware }}"
  loop_control:
    loop_var: kvm_firmware_cur
- include_tasks: exterminate_kvm_machine.yml
  with_items: "{{ kvm_machine_exterminate }}"
  loop_control:
    loop_var: kvm_machine_name
- include_tasks: kvm_machine.yml
  with_items: "{{ kvm_machines }}"
  loop_control:
    loop_var: kvm_machine

